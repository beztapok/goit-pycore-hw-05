def caching_fibonacci():
    """
    Функція для створення замикання, яке зберігає обчислені значення чисел Фібоначчі.
    Це дозволяє ефективно використовувати попередньо обчислені значення без необхідності повторного обчислення.
    
    Returns:
    Callable[[int], int]: Функція, яка обчислює n-те число Фібоначчі.
    """
    cache = {}  # Словник для збереження результатів обчислень чисел Фібоначчі

    def fibonacci(n):
        """
        Обчислює n-те число Фібоначчі з використанням замикання для кешування попередніх результатів.
        
        Args:
        n (int): Індекс числа у послідовності Фібоначчі.
        
        Returns:
        int: n-те число Фібоначчі.
        """
        if n <= 0:
            return 0
        elif n == 1:
            return 1
        if n not in cache:
            cache[n] = fibonacci(n - 1) + fibonacci(n - 2)
        return cache[n]

    return fibonacci

# Використання функції caching_fibonacci
if __name__ == "__main__":
    # Отримуємо функцію fibonacci, яка включає механізм кешування
    fib = caching_fibonacci()

    # Використання функції fibonacci для обчислення чисел Фібоначчі
    print(fib(10))  # Виведе 55
    print(fib(15))  # Виведе 610
    print(fib(20))  # Виведе 6765
